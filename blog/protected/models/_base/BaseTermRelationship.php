<?php

/**
 * This is the model base class for the table "term_relationships".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TermRelationship".
 *
 * Columns in table "term_relationships" available as properties of the model,
 * followed by relations of table "term_relationships" available as properties of the model.
 *
 * @property string $relation_id
 * @property string $term_id
 * @property string $post_id
 * @property string $relation_level
 * @property string $relation_type
 *
 * @property Term $term
 * @property Post $post
 */
abstract class BaseTermRelationship extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'term_relationships';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'TermRelationship|TermRelationships', $n);
	}

	public static function representingColumn() {
		return 'relation_level';
	}

	public function rules() {
		return array(
			array('term_id, post_id, relation_level, relation_type', 'required'),
			array('term_id, post_id, relation_type', 'length', 'max'=>20),
			array('relation_level', 'length', 'max'=>10),
			array('relation_id, term_id, post_id, relation_level, relation_type', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'term' => array(self::BELONGS_TO, 'Term', 'term_id'),
			'post' => array(self::BELONGS_TO, 'Post', 'post_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'relation_id' => Yii::t('app', 'Relation'),
			'term_id' => null,
			'post_id' => null,
			'relation_level' => Yii::t('app', 'Relation Level'),
			'relation_type' => Yii::t('app', 'Relation Type'),
			'term' => null,
			'post' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('relation_id', $this->relation_id, true);
		$criteria->compare('term_id', $this->term_id);
		$criteria->compare('post_id', $this->post_id);
		$criteria->compare('relation_level', $this->relation_level, true);
		$criteria->compare('relation_type', $this->relation_type, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}