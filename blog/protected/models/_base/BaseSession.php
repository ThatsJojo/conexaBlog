<?php

/**
 * This is the model base class for the table "sessions".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Session".
 *
 * Columns in table "sessions" available as properties of the model,
 * followed by relations of table "sessions" available as properties of the model.
 *
 * @property string $session_id
 * @property string $session_ip_address
 * @property string $session_user_agent
 * @property string $session_last_activity
 * @property string $user_id
 *
 * @property User $user
 */
abstract class BaseSession extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'sessions';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Session|Sessions', $n);
	}

	public static function representingColumn() {
		return 'session_ip_address';
	}

	public function rules() {
		return array(
			array('session_user_agent, user_id', 'required'),
			array('session_id', 'length', 'max'=>40),
			array('session_ip_address', 'length', 'max'=>16),
			array('session_user_agent', 'length', 'max'=>50),
			array('user_id', 'length', 'max'=>20),
			array('session_last_activity', 'safe'),
			array('session_id, session_ip_address, session_last_activity', 'default', 'setOnEmpty' => true, 'value' => null),
			array('session_id, session_ip_address, session_user_agent, session_last_activity, user_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'session_id' => Yii::t('app', 'Session'),
			'session_ip_address' => Yii::t('app', 'Session Ip Address'),
			'session_user_agent' => Yii::t('app', 'Session User Agent'),
			'session_last_activity' => Yii::t('app', 'Session Last Activity'),
			'user_id' => null,
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('session_id', $this->session_id, true);
		$criteria->compare('session_ip_address', $this->session_ip_address, true);
		$criteria->compare('session_user_agent', $this->session_user_agent, true);
		$criteria->compare('session_last_activity', $this->session_last_activity, true);
		$criteria->compare('user_id', $this->user_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}