<?php

/**
 * This is the model base class for the table "users".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "users" available as properties of the model,
 * followed by relations of table "users" available as properties of the model.
 *
 * @property string $user_id
 * @property string $user_login
 * @property string $user_pass
 * @property string $user_email
 * @property string $user_name
 * @property string $user_sirname
 * @property string $user_cpf
 * @property string $user_rg
 * @property string $user_phone
 *
 * @property Comment[] $comments
 * @property Post[] $posts
 * @property Session[] $sessions
 * @property Usermeta[] $usermetas
 */
abstract class BaseUser extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'users';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'User|Users', $n);
	}

	public static function representingColumn() {
		return 'user_login';
	}

	public function rules() {
		return array(
			array('user_login, user_pass, user_email', 'required'),
			array('user_login', 'length', 'max'=>60),
			array('user_pass', 'length', 'max'=>255),
			array('user_email, user_sirname', 'length', 'max'=>100),
			array('user_name', 'length', 'max'=>50),
			array('user_cpf, user_phone', 'length', 'max'=>14),
			array('user_rg', 'length', 'max'=>13),
			array('user_name, user_sirname, user_cpf, user_rg, user_phone', 'default', 'setOnEmpty' => true, 'value' => null),
			array('user_id, user_login, user_pass, user_email, user_name, user_sirname, user_cpf, user_rg, user_phone', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'comments' => array(self::HAS_MANY, 'Comment', 'comment_user_id'),
			'posts' => array(self::HAS_MANY, 'Post', 'post_author'),
			'sessions' => array(self::HAS_MANY, 'Session', 'user_id'),
			'usermetas' => array(self::HAS_MANY, 'Usermeta', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'user_id' => Yii::t('app', 'User'),
			'user_login' => Yii::t('app', 'User Login'),
			'user_pass' => Yii::t('app', 'User Pass'),
			'user_email' => Yii::t('app', 'User Email'),
			'user_name' => Yii::t('app', 'User Name'),
			'user_sirname' => Yii::t('app', 'User Sirname'),
			'user_cpf' => Yii::t('app', 'User Cpf'),
			'user_rg' => Yii::t('app', 'User Rg'),
			'user_phone' => Yii::t('app', 'User Phone'),
			'comments' => null,
			'posts' => null,
			'sessions' => null,
			'usermetas' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('user_id', $this->user_id, true);
		$criteria->compare('user_login', $this->user_login, true);
		$criteria->compare('user_pass', $this->user_pass, true);
		$criteria->compare('user_email', $this->user_email, true);
		$criteria->compare('user_name', $this->user_name, true);
		$criteria->compare('user_sirname', $this->user_sirname, true);
		$criteria->compare('user_cpf', $this->user_cpf, true);
		$criteria->compare('user_rg', $this->user_rg, true);
		$criteria->compare('user_phone', $this->user_phone, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}